name: Reusable workflow for terragrunt validate-plan + apply for a specific environment

on:
  workflow_call:
    inputs:
      terragrunt_env:
        required: true
        type: string
    secrets:
      terraform-modules-ssh-key:
        required: true
      sp_client_id:
        required: true
      sp_client_secret:
        required: true

jobs:
  terragrunt-validate-plan:
    runs-on: [ self-hosted, Linux, terraform, hub, golden-images ]
    env:
      ARM_TENANT_ID: "8dbee730-91af-4ab0-9fb6-085d4a3630c1"
      ARM_CLIENT_ID: ${{ secrets.sp_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.sp_client_secret }}
    container:
      image: liantisgoldenimages.azurecr.io/terragrunt:2
    steps:
      - run: echo "${{ secrets.terraform-modules-ssh-key }}" | tr -d '\r' > /root/.ssh/id_rsa  && chmod 600 /root/.ssh/id_rsa
      - uses: actions/checkout@v2
      - run: terragrunt validate --terragrunt-non-interactive --terragrunt-working-dir env/${{ inputs.terragrunt_env }}
      - run: terragrunt plan -out "$PWD/planfile-${{ inputs.terragrunt_env }}" --terragrunt-non-interactive --terragrunt-working-dir env/${{ inputs.terragrunt_env }}
      - uses: actions/upload-artifact@v2
        with:
          name: planfile-${{ inputs.terragrunt_env }}
          path: planfile-${{ inputs.terragrunt_env }}

  terragrunt-apply:
    needs: [ terragrunt-validate-plan ]
    runs-on: [ self-hosted, Linux, terraform, hub, golden-images ]
    env:
      ARM_TENANT_ID: "8dbee730-91af-4ab0-9fb6-085d4a3630c1"
      ARM_CLIENT_ID: ${{ secrets.sp_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.sp_client_secret }}
    container:
      image: liantisgoldenimages.azurecr.io/terragrunt:2
    environment:
      name: ${{ inputs.terragrunt_env }}
    steps:
      - run: echo "${{ secrets.terraform-modules-ssh-key }}" | tr -d '\r' > /root/.ssh/id_rsa  && chmod 600 /root/.ssh/id_rsa
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: planfile-${{ inputs.terragrunt_env }}
      - run: terragrunt apply -auto-approve "$PWD/planfile-${{ inputs.terragrunt_env }}" --terragrunt-non-interactive --terragrunt-working-dir env/${{ inputs.terragrunt_env }}